package com.example.jhipster.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReferralAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferralAllPropertiesEquals(Referral expected, Referral actual) {
        assertReferralAutoGeneratedPropertiesEquals(expected, actual);
        assertReferralAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferralAllUpdatablePropertiesEquals(Referral expected, Referral actual) {
        assertReferralUpdatableFieldsEquals(expected, actual);
        assertReferralUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferralAutoGeneratedPropertiesEquals(Referral expected, Referral actual) {
        assertThat(actual)
            .as("Verify Referral auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferralUpdatableFieldsEquals(Referral expected, Referral actual) {
        assertThat(actual)
            .as("Verify Referral relevant properties")
            .satisfies(a -> assertThat(a.getJob_id()).as("check job_id").isEqualTo(expected.getJob_id()))
            .satisfies(a -> assertThat(a.getReferrer_id()).as("check referrer_id").isEqualTo(expected.getReferrer_id()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReferralUpdatableRelationshipsEquals(Referral expected, Referral actual) {
        assertThat(actual)
            .as("Verify Referral relationships")
            .satisfies(a -> assertThat(a.getApplication()).as("check application").isEqualTo(expected.getApplication()));
    }
}
